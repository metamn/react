{"componentChunkName":"component---src-templates-blog-post-js","path":"/there-is-no-official-style-guide-for-react/","webpackCompilationHash":"74bb562b65e44a709d48","result":{"data":{"site":{"siteMetadata":{"title":":heart: React","author":"Metamn"}},"markdownRemark":{"id":"92d4b2f8-0e22-5a6f-aa5d-9425bfb97817","excerpt":"And we clearly miss it.","html":"<p>And we clearly miss it.</p>\n<!--more-->\n<h2>Style guides</h2>\n<p>Style guides associated with programming languages enhance code quality and code reuse.</p>\n<p>When code follows a style guide it is easy to understand and to extend by anybody else who also follows the same style guide.</p>\n<p>Usually a style guide incorporates industry best practices. It does without doubt, thus adopted by many, offering a true relief for its users.</p>\n<p>React, unfortunately, has no official style guide provided by Facebook. This role is taken voluntarily by AirBnb, and it is questionable.</p>\n<p>Just some bits:</p>\n<ul>\n<li>Use <code class=\"language-text\">.jsx</code> as file extension instead of <code class=\"language-text\">.js</code> — a suggestion with <em>doubt</em>, against the gut, at least for me personally.</li>\n<li>Pass params as list instead of array, which contradicts the <a href=\"https://alistapart.com/article/coding-with-clarity#section3\">loose coupling</a> general coding principle.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFullName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> firstName <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>firstName\n  <span class=\"token keyword\">const</span> lastName <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>lastName\n\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFullName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> firstName<span class=\"token punctuation\">,</span> lastName <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> user\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// best</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFullName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> firstName<span class=\"token punctuation\">,</span> lastName <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As a conclusion I do not use any styleguide for now. I rather wait for the official styleguide to come out.</p>\n<p>It’s not that the AirBnb styleguide is wrong. The fact is that even React itself doesn’t stick to it.</p>\n<h3>Update</h3>\n<ul>\n<li><a href=\"https://overreacted.io/writing-resilient-components/\">Dan Abramov</a> explains why React has no official style guide.</li>\n</ul>\n<h3>Resources</h3>\n<ul>\n<li><a href=\"https://github.com/airbnb/javascript#destructuring\">The AirBnb style guide with a contradictory best practice suggestion</a></li>\n<li><a href=\"https://alistapart.com/article/coding-with-clarity#section3\">Coding with clarity</a></li>\n</ul>","frontmatter":{"title":"There is no official style guide for React","date":"January 08, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/there-is-no-official-style-guide-for-react/","previous":{"excerpt":"Pick two colors … and voila!","fields":{"slug":"/a-monochromatic-palette-with-hsl-and-react/"},"frontmatter":{"title":"A monochromatic palette with HSL and React"}},"next":{"excerpt":"New techniques for old problems.","fields":{"slug":"/react-inspired-bem-scss-styling/"},"frontmatter":{"title":"React inspired BEM / SCSS styling"}}}}}