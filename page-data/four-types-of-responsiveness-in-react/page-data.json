{"componentChunkName":"component---src-templates-blog-post-js","path":"/four-types-of-responsiveness-in-react/","webpackCompilationHash":"4e1985a14b92e7367e74","result":{"data":{"site":{"siteMetadata":{"title":":heart: React","author":"Metamn"}},"markdownRemark":{"id":"95db8fb9-8572-523d-952d-5baca964ca0e","excerpt":"With React — a reactive / responsive framework — it’s time to rethink the responsiveness of a website.","html":"<p>With React — a reactive / responsive framework — it’s time to rethink the responsiveness of a website.</p>\n<!--more-->\n<p>In most cases, on the large web, responsiveness means the site is adapting to the device screen size using media queries.</p>\n<p>Since <a href=\"https://frankchimero.com/writing/the-webs-grain/\">Frank Chimero’s original article</a> we know this is not enough. Why? There are too many devices, and there will be much more which cannot be covered by media queries.</p>\n<p>Instead, we should let every component of the site be aware of its size and respond accordingly to changes. This way the final site <a href=\"http://metamn.io/beat/tomorrowww/\">can be assembled automagically</a> even in unknown and uncertain conditions.</p>\n<p>This idea is familiar with React: every component is in charge of, and manages its own state. That should be true also for plain CSS elements. There is a <a href=\"https://elementqueries.com/\">work in progress</a> towards a general protocol but W3C, as usual, is catching up very slow, thus CSS Element Queries are not a standard yet.</p>\n<p>Fortunately React has plenty of libraries and ways to make elements be aware of their dimension and act upon changes.</p>\n<p>We have the following individual scenarios which can be combined when necessary:</p>\n<ol>\n<li><strong>Global state —</strong> Elements are aware of each other’s state and can act upon changes collectively.</li>\n<li><strong>React Measure —</strong> An element is aware of its measures and can react to changes.</li>\n<li><strong>Element Queries —</strong> An element’s style can perform element queries to react to changes inside style.</li>\n<li><strong>Media Queries —</strong> An element’s style can perform classic media queries and react when device screen size is changed.</li>\n</ol>\n<h3>Resources</h3>\n<ul>\n<li><a href=\"https://github.com/souporserious/react-measure\">React Measure</a></li>\n<li><a href=\"https://github.com/ZeeCoder/container-query\">A list of available technologies for element queries, Dec 2018</a></li>\n<li><a href=\"http://metamn.io/beat/tomorrowww/\">Devices as designers</a></li>\n<li><a href=\"https://frankchimero.com/writing/the-webs-grain/\">An original idea by Frank Chimero</a></li>\n</ul>","frontmatter":{"title":"Four types of responsiveness in React","date":"December 14, 2018"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/four-types-of-responsiveness-in-react/","previous":{"excerpt":"No one can imagine how much creativity gone lost while we had no Storybook or an alternative.","fields":{"slug":"/designing-with-storybook/"},"frontmatter":{"title":"Designing with Storybook"}},"next":{"excerpt":"Typography has to be completely rethought.","fields":{"slug":"/bauhaus-to-emoji-a-call-for-a-new-typography/"},"frontmatter":{"title":"Bauhaus to emoji: A call for a new typography"}}}}}