{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-inspired-bem-scss-styling/","webpackCompilationHash":"e24f080e93f662bc24cd","result":{"data":{"site":{"siteMetadata":{"title":":heart: React","author":"Metamn"}},"markdownRemark":{"id":"eb8cff59-48e5-5206-bd9c-eaa479ffac43","excerpt":"New techniques for old problems.","html":"<p>New techniques for old problems.</p>\n<!--more-->\n<hr>\n<p>After working a while with React I had to switch back to a classic project: WordPress and plain SCSS with some BEM. The task was to bring an age old codebase to the modern component era.</p>\n<p>I was wondering how I could keep that pleasant workflow React offers: components are responsible for their own dependencies and state. They are standalone and self-contained.</p>\n<p>I was looking to implement something similar to:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Component.js</span>\n\n<span class=\"token comment\">// Imports all dependencies</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span>\n<span class=\"token keyword\">import</span> styled<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token comment\">// Manages state</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">changeState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token operator\">...</span>\n\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>Container handleClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">i</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeState</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">...</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Container<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>It turned out it is extremely easy to implement something similar with SCSS / BEM:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">// button.scss\n\n// Imports all dependencies\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">'../colors/colors.scss'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">'../link/link.scss'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">'../border/border.scss'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">'--primary/button--primary.scss'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">'--secondary/button--secondary.scss'</span><span class=\"token punctuation\">;</span></span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@mixin</span> <span class=\"token function\">button</span><span class=\"token punctuation\">(</span>$<span class=\"token property\">variant</span><span class=\"token punctuation\">:</span> primary<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@include</span> <span class=\"token function\">colors</span><span class=\"token punctuation\">(</span>inverted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token atrule\"><span class=\"token rule\">@include</span> <span class=\"token function\">link</span><span class=\"token punctuation\">(</span>not-underlined<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token atrule\"><span class=\"token rule\">@include</span> <span class=\"token function\">border</span><span class=\"token punctuation\">(</span>rounded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n\n  // Manages state / variations / deviations\n  <span class=\"token atrule\"><span class=\"token rule\">@if</span> <span class=\"token punctuation\">(</span>$variant == primary<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@include</span> button--primary<span class=\"token punctuation\">;</span></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@if</span> <span class=\"token punctuation\">(</span>$variant == secondary<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@include</span> button--secondary<span class=\"token punctuation\">;</span></span>\n  <span class=\"token punctuation\">}</span>\n\n  ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>After hundreds of components written in this way — a peace of mind is achieved.</p>\n<p>Every component is standalone and self-contained.</p>\n<p>Imports all necessary stuff required for its internal workings and incorporates all deviations and variations from the default case.</p>","frontmatter":{"title":"React inspired BEM / SCSS styling","date":"March 31, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-inspired-bem-scss-styling/","previous":{"excerpt":"And we clearly miss it.","fields":{"slug":"/there-is-no-official-style-guide-for-react/"},"frontmatter":{"title":"There is no official style guide for React"}},"next":{"excerpt":"Shiny new features on the way!","fields":{"slug":"/after-five-months-storybook/"},"frontmatter":{"title":"After five months — Storybook"}}}}}