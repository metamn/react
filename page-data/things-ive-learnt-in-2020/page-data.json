{"componentChunkName":"component---src-templates-blog-post-js","path":"/things-ive-learnt-in-2020/","webpackCompilationHash":"4e1985a14b92e7367e74","result":{"data":{"site":{"siteMetadata":{"title":":heart: React","author":"Metamn"}},"markdownRemark":{"id":"b60aa482-4df5-53c7-a47d-18c4a79bd6a8","excerpt":"React—used appropriately—works.","html":"<p>React—used appropriately—works.</p>\n<!--more-->\n<h2>React for small sites: NO</h2>\n<p>React has the highest learning curve from all frameworks, paradigms I’ve encountered in my career.</p>\n<p>React itself is not complicated. The underlying new principles and the immature ecosystem makes it complicated.</p>\n<p>If you want something small like a marketing site, blog, portfolio — better avoid it. Any old stack, or Svelte and Vue might be better.</p>\n<h2>React for REST API: NO</h2>\n<p>This year I saw how desperate people jump into the React bandwagon without understanding React is one piece of the puzzle.</p>\n<p>React shines together with GraphQL and Relay, it’s siblings. When separated React becomes a yet another UI library without <code class=\"language-text\">the sum is greater than its parts</code> effect.</p>\n<h2>React for the future: YES</h2>\n<p>In case you’ll want to invest in future React is perfect.</p>\n<p>It transitions you from the old, imperative thinking to the new functional and reactive thinking.</p>\n<p>React is a pioneer. It’s successor, a dedicated and integrated tool built from scratch on these new principles, perhaps is in the labs somewhere.</p>\n<p>Invest now in React, and you’ll pick up the new tool later in no time.</p>\n<h2>React for a design system: PERHAPS (99%)</h2>\n<p>Back in 2015 I’ve created a design system in plain HTML, SCSS, Javascript on Gulp and Node.</p>\n<p>The weak point was Javascript — programming user interactions. Binding together structure, style and behaviour with <code class=\"language-text\">id</code> and <code class=\"language-text\">class</code> names is an ultimate perversion which doesn’t scale.</p>\n<p>Now I’ve spent Q4 with creating a design system in React and Typescript on Webpack, Babel and Node.</p>\n<p>I’m pretty sure (99%) this stack works. Then I can state wholeheartedly React today is one of the best tools to create a design system.</p>\n<h2>React for interactive design: DEFINITIVELY</h2>\n<p>What makes React great is how fast it updates the smallest pixel on the screen.</p>\n<p>This feature opens up perspective in creative coding with React. What was until now possible with WebGL and Canvas is now possible with plain HTML, CSS and the shadow DOM.</p>\n<p>Paint on the screen when the cursor moves, you’ve thought? Right, you can do it with React.</p>\n<h2>Summing up</h2>\n<p>React is god-sent. It’s the first web language optimized for <em>heavy</em> user interactions.</p>\n<p>Used in the right context makes magic. Otherwise, well, is often pain.</p>","frontmatter":{"title":"Things I've learnt in 2020","date":"December 20, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/things-ive-learnt-in-2020/","previous":{"excerpt":"22 things in random order.","fields":{"slug":"/things-ive-learnt-q4-2019/"},"frontmatter":{"title":"Things I've learnt — Q4 2019"}},"next":{"excerpt":"For highly interactive, static websites without API.","fields":{"slug":"/my-current-stack/"},"frontmatter":{"title":"My current stack"}}}}}